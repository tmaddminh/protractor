"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ExecutableItem_1 = require("./entities/ExecutableItem");
var Status_1 = require("./entities/Status");
var Stage_1 = require("./entities/Stage");
var Parameter_1 = require("./entities/Parameter");
var Attachment_1 = require("./entities/Attachment");
var isPromise_1 = require("./isPromise");
var ExecutableItemWrapper = /** @class */ (function () {
    function ExecutableItemWrapper(info) {
        this.info = info;
    }
    Object.defineProperty(ExecutableItemWrapper.prototype, "wrappedItem", {
        get: function () {
            return this.info;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "name", {
        set: function (name) {
            this.info.name = name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "description", {
        set: function (description) {
            this.info.description = description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "descriptionHtml", {
        set: function (descriptionHtml) {
            this.info.descriptionHtml = descriptionHtml;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "status", {
        set: function (status) {
            this.info.status = status;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "statusDetails", {
        set: function (details) {
            this.info.statusDetails = details;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "detailsMessage", {
        set: function (message) {
            this.info.statusDetails.message = message;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "detailsTrace", {
        set: function (trace) {
            this.info.statusDetails.trace = trace;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "detailsMuted", {
        set: function (muted) {
            this.info.statusDetails.muted = muted;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "detailsKnown", {
        set: function (known) {
            this.info.statusDetails.known = known;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "detailsFlaky", {
        set: function (flaky) {
            this.info.statusDetails.flaky = flaky;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExecutableItemWrapper.prototype, "stage", {
        set: function (stage) {
            this.info.stage = stage;
        },
        enumerable: true,
        configurable: true
    });
    ExecutableItemWrapper.prototype.addParameter = function (name, value) {
        this.info.parameters.push(new Parameter_1.Parameter(name, value));
    };
    ExecutableItemWrapper.prototype.addAttachment = function (name, type, fileName) {
        this.info.attachments.push(new Attachment_1.Attachment(name, type, fileName));
    };
    ExecutableItemWrapper.prototype.startStep = function (name) {
        var stepResult = new ExecutableItem_1.ExecutableItem();
        this.info.steps.push(stepResult);
        var allureStep = new AllureStep(stepResult);
        allureStep.name = name;
        return allureStep;
    };
    ExecutableItemWrapper.prototype.wrap = function (fun) {
        var _this = this;
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            _this.stage = Stage_1.Stage.RUNNING;
            var result;
            try {
                result = fun(args);
            }
            catch (error) {
                _this.stage = Stage_1.Stage.INTERRUPTED; // fixme is this right for exception?
                _this.status = Status_1.Status.BROKEN;
                if (error) {
                    _this.detailsMessage = error.message || "";
                    _this.detailsTrace = error.stack || "";
                }
                throw error;
            }
            if (isPromise_1.isPromise(result)) {
                var promise = result;
                return promise.then(function (res) {
                    _this.status = Status_1.Status.PASSED;
                    _this.stage = Stage_1.Stage.FINISHED;
                    return res;
                }).catch(function (error) {
                    _this.stage = Stage_1.Stage.INTERRUPTED; // fixme is this right for exception?
                    _this.status = Status_1.Status.BROKEN;
                    if (error) {
                        _this.detailsMessage = error.message || "";
                        _this.detailsTrace = error.stack || "";
                    }
                    throw error;
                });
            }
            else {
                _this.status = Status_1.Status.PASSED;
                _this.stage = Stage_1.Stage.FINISHED;
                return result;
            }
        };
    };
    return ExecutableItemWrapper;
}());
exports.ExecutableItemWrapper = ExecutableItemWrapper;
// This class is here because of circular dependency with ExecutableItemWrapper
var AllureStep = /** @class */ (function (_super) {
    __extends(AllureStep, _super);
    function AllureStep(stepResult) {
        var _this = _super.call(this, stepResult) || this;
        _this.stepResult = stepResult;
        _this.stepResult.start = Date.now();
        return _this;
    }
    AllureStep.prototype.endStep = function () {
        this.stepResult.stop = Date.now();
        // TODO: test that child steps ended
    };
    return AllureStep;
}(ExecutableItemWrapper));
exports.AllureStep = AllureStep;
//# sourceMappingURL=ExecutableItemWrapper.js.map