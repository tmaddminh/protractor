"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LabelName_1 = require("./entities/LabelName");
var AllureInterface = /** @class */ (function () {
    function AllureInterface() {
    }
    // below are compatibility functions
    /**
     * @deprecated Use step function
     */
    AllureInterface.prototype.createStep = function (name, stepFunction) {
        var _this = this;
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return _this.step(name, function () { return stepFunction.apply(_this, args); });
        };
    };
    /**
     * @deprecated Use attachment function
     */
    AllureInterface.prototype.createAttachment = function (name, content, type) {
        var _this = this;
        if (typeof content === "function") {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                _this.attachment(name, content.apply(_this, args), type);
            };
        }
        else {
            this.attachment(name, content, type);
        }
    };
    /**
     * @deprecated
     */
    AllureInterface.prototype.addArgument = function (name, value) {
        this.addParameter(name, value);
    };
    /**
     * @deprecated
     */
    AllureInterface.prototype.addEnvironment = function (name, value) {
        this.addParameter("ENV[" + name + "]", value);
    };
    /**
     * @deprecated use setDescription
     */
    AllureInterface.prototype.description = function (description, type) {
        this.setDescription(description); // fixme what about type?
    };
    /**
     * @deprecated use setSeverity
     */
    AllureInterface.prototype.severity = function (severity) {
        this.addLabel(LabelName_1.LabelName.SEVERITY, severity);
    };
    /**
     * @deprecated
     */
    AllureInterface.prototype.epic = function (epic) {
        this.addLabel(LabelName_1.LabelName.EPIC, epic);
    };
    /**
     * @deprecated
     */
    AllureInterface.prototype.feature = function (feature) {
        this.addLabel(LabelName_1.LabelName.FEATURE, feature);
    };
    /**
     * @deprecated
     */
    AllureInterface.prototype.story = function (story) {
        this.addLabel(LabelName_1.LabelName.STORY, story);
    };
    return AllureInterface;
}());
exports.AllureInterface = AllureInterface;
//# sourceMappingURL=AllureInterface.js.map