import { ExecutableItem } from "./entities/ExecutableItem";
import { Status } from "./entities/Status";
import { StatusDetails } from "./entities/StatusDetails";
import { Stage } from "./entities/Stage";
import { ContentType } from "./entities/ContentType";
import { StepResult } from "./entities/StepResult";
export declare class ExecutableItemWrapper {
    private readonly info;
    constructor(info: ExecutableItem);
    protected readonly wrappedItem: ExecutableItem;
    name: string;
    description: string;
    descriptionHtml: string;
    status: Status;
    statusDetails: StatusDetails;
    detailsMessage: string;
    detailsTrace: string;
    detailsMuted: boolean;
    detailsKnown: boolean;
    detailsFlaky: boolean;
    stage: Stage;
    addParameter(name: string, value: string): void;
    addAttachment(name: string, type: ContentType, fileName: string): void;
    startStep(name: string): AllureStep;
    wrap<T>(fun: (...args: any[]) => any): (...args: any[]) => any;
}
export declare class AllureStep extends ExecutableItemWrapper {
    private readonly stepResult;
    constructor(stepResult: StepResult);
    endStep(): void;
}
